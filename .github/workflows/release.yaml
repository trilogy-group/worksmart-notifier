name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Wine
        run: |
          if [ ! -d ~/.wine ]; then
            sudo dpkg --add-architecture i386 
            wget -nc https://dl.winehq.org/wine-builds/winehq.key
            sudo apt-key add winehq.key
            sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main' 
            sudo apt update
            sudo apt install --install-recommends winehq-stable
          fi

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Package
        run: yarn run dist

      - name: Get version
        id: package
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check
        run: |
          previoustag=$(git tag -l "${{ env.version }}")
          if [ -z "$previoustag" ]; then
            echo "exists=0" >> $GITHUB_ENV
          else
            echo "exists=1" >> $GITHUB_ENV
          fi

      - name: Generate Changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        if: steps.check.outputs.exists != '1'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        if: steps.check.outputs.exists != '1'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/worksmart-notifier Setup ${{ env.version }}.exe
          asset_name: worksmart-notifier Setup ${{ env.version }}.exe
          asset_content_type: application/octet-stream
